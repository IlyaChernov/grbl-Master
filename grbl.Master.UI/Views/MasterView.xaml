<Window x:Class="grbl.Master.UI.Views.MasterView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit" xmlns:borders="clr-namespace:ToggleSwitch.Borders;assembly=ToggleSwitch" xmlns:cal="http://www.caliburnproject.org" xmlns:converters="clr-namespace:grbl.Master.UI.Converters" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:enum="clr-namespace:grbl.Master.Model.Enum;assembly=grbl.Master.Model" xmlns:extensions="clr-namespace:grbl.Master.UI.Extensions" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:model="clr-namespace:grbl.Master.Model;assembly=grbl.Master.Model" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:toggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch" xmlns:viewModel="clr-namespace:grbl.Master.UI.ViewModels" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" Title="grbl Master" Width="950" Height="670" MinWidth="950" MinHeight="670"
        d:DataContext="{d:DesignInstance Type=viewModel:MasterViewModel,
                                         IsDesignTimeCreatable=False}"
        Icon="/grbl.Master.UI;component/favicon.ico" mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="46" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="270" />
            </Grid.ColumnDefinitions>
            <GroupBox Header="Grbl connection">
                <ContentControl x:Name="ComConnectionViewModel" />
            </GroupBox>
            <GroupBox Grid.Column="1" Header="Manual commands">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="ManualCommand" cal:Message.Attach="[Key Enter] = [SendEnterCommand]" />
                    <Button x:Name="SendManualCommand" Grid.Column="1" ToolTip="Send">
                        <materialDesign:PackIcon Width="20" Height="20" Foreground="Black" Kind="Send" />
                    </Button>
                </Grid>
            </GroupBox>

        </Grid>
        <Label x:Name="SliderLinearityLabel" Grid.Row="0"
               Content="{Binding SliderLinearity}"
               Visibility="Collapsed" />
        <TabControl Grid.Row="1">
            <TabItem Width="100" Header="Grbl interface">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="350" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="270" />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="260" />
                            <RowDefinition Height="300" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.Resources>
                                <Style TargetType="xctk:CalculatorUpDown">
                                    <Setter Property="FontSize" Value="50" />
                                    <Setter Property="TextAlignment" Value="Right" />
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <!--<Setter Property="IsReadOnly" Value="True" />-->
                                    <Setter Property="Padding" Value="-10,-15,0,0" />
                                </Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="FontSize" Value="50" />
                                    <Setter Property="TextAlignment" Value="Right" />
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <!--<Setter Property="IsReadOnly" Value="True" />-->
                                    <Setter Property="Padding" Value="-10,-15,0,0" />
                                </Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="30" />
                                    <Setter Property="VerticalAlignment" Value="Bottom" />
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="TextAlignment" Value="Right" />
                                    <Setter Property="Foreground" Value="DarkGray" />
                                    <Setter Property="Margin" Value="0,0,25,0" />
                                </Style>
                                <Style TargetType="Label">
                                    <Setter Property="FontSize" Value="50" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                                <Style x:Key="StatusLine"
                                       BasedOn="{StaticResource {x:Type TextBox}}"
                                       TargetType="TextBox">
                                    <Setter Property="FontSize" Value="20" />
                                    <Setter Property="TextAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="0,0,0,0" />
                                    <Setter Property="Margin" Value="1" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="Margin" Value="1" />
                                    <Setter Property="Padding" Value="-10" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <xctk:CalculatorUpDown Grid.Row="0" Grid.Column="1" cal:Message.Attach="[Key Enter] = [Action SetWorkPos('X', $source)]" ShowButtonSpinner="False" ToolTip="Current X work position"
                                                   Value="{Binding GrblStatus.WorkPosition.X, UpdateSourceTrigger=LostFocus}" />
                            <TextBlock Grid.Row="0" Grid.Column="1"
                                       Text="{Binding GrblStatus.MachinePosition.X}"
                                       ToolTip="Current X machine position" />

                            <xctk:CalculatorUpDown Grid.Row="1" Grid.Column="1" cal:Message.Attach="[Key Enter] = [Action SetWorkPos('Y', $source)]" ShowButtonSpinner="False" ToolTip="Current Y work position"
                                                   Value="{Binding GrblStatus.WorkPosition.Y, UpdateSourceTrigger=LostFocus}" />
                            <TextBlock Grid.Row="1" Grid.Column="1"
                                       Text="{Binding GrblStatus.MachinePosition.Y}"
                                       ToolTip="Current Y machine position" />

                            <xctk:CalculatorUpDown Grid.Row="2" Grid.Column="1" cal:Message.Attach="[Key Enter] = [Action SetWorkPos('Z', $source)]" ShowButtonSpinner="False" ToolTip="Current Z work position"
                                                   Value="{Binding GrblStatus.WorkPosition.Z, UpdateSourceTrigger=LostFocus}" />
                            <TextBlock Grid.Row="2" Grid.Column="1"
                                       Text="{Binding GrblStatus.MachinePosition.Z}"
                                       ToolTip="Current Z machine position" />

                            <Button Grid.Row="0" Grid.Column="0" cal:Message.Attach="GCommand('G90 G10 L20 P0 X0')" FontSize="20" Foreground="Red">
                                <Button.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </Button.LayoutTransform>
                                X=0
                            </Button>
                            <Button Grid.Row="1" Grid.Column="0" cal:Message.Attach="GCommand('G90 G10 L20 P0 Y0')" FontSize="20" Foreground="Green">
                                <Button.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </Button.LayoutTransform>
                                Y=0
                            </Button>
                            <Button Grid.Row="2" Grid.Column="0" cal:Message.Attach="GCommand('G90 G10 L20 P0 Z0')" FontSize="20" Foreground="Blue">
                                <Button.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </Button.LayoutTransform>
                                Z=0
                            </Button>
                            <Button Grid.Row="0" Grid.RowSpan="3" Grid.Column="2" cal:Message.Attach="GCommand('G90 G10 L20 P0 X0 Y0 Z0')" FontSize="28">
                                <Button.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </Button.LayoutTransform>
                                Zero X Y Z
                            </Button>
                            <TextBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                                     Text="{Binding GrblStatus.MachineState}">
                                <TextBox.Style>
                                    <Style BasedOn="{StaticResource StatusLine}" TargetType="TextBox">

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Alarm">
                                                <Setter Property="Background" Value="OrangeRed" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Hold">
                                                <Setter Property="Background" Value="Orange" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Check">
                                                <Setter Property="Background" Value="Orange" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Idle">
                                                <Setter Property="Background" Value="LightSkyBlue" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Online">
                                                <Setter Property="Background" Value="LightSkyBlue" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Run">
                                                <Setter Property="Background" Value="LightGreen" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Jog">
                                                <Setter Property="Background" Value="LightGreen" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <ProgressBar Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Maximum="100"
                                         Value="{Binding CommandQueueLength, Mode=OneWay}" />
                        </Grid>

                        <TabControl Grid.Row="1" Margin="1">
                            <TabItem Width="100" Header="Manual control">
                                <Grid Margin="-1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="180" />
                                        <RowDefinition />

                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50" />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="50" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="FontSize" Value="16" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Margin" Value="1" />
                                                <Setter Property="Padding" Value="-10" />
                                            </Style>
                                        </Grid.Resources>
                                        <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="26" />
                                            </Grid.RowDefinitions>

                                            <xctk:CalculatorUpDown Grid.Row="1" Margin="1,0,1,1" ShowButtonSpinner="False"
                                                                   Value="{Binding SelectedJoggingDistance}" />
                                            <Grid Grid.Row="0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="16" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <Label Margin="0" Padding="0" HorizontalContentAlignment="Center">
                                                    Distance
                                                </Label>

                                                <Slider Grid.Row="1" Width="25" Margin="0,0,0,1" IsSnapToTickEnabled="True"
                                                        Maximum="{Binding JoggingDistancesLast, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}"
                                                        Minimum="{Binding JoggingDistancesFirst, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}"
                                                        Orientation="Vertical" TickPlacement="TopLeft"
                                                        Ticks="{Binding JoggingDistances, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}"
                                                        ToolTip="{Binding SelectedJoggingDistance}"
                                                        Value="{Binding SelectedJoggingDistance, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}" />
                                            </Grid>
                                        </Grid>
                                        <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="26" />
                                            </Grid.RowDefinitions>
                                            <TextBox x:Name="SelectedFeedRate" Grid.Row="1" Margin="1,0,1,1" />
                                            <Grid Grid.Row="0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="16" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <Label Margin="0" Padding="0" HorizontalContentAlignment="Center">
                                                    Feed
                                                </Label>
                                                <Slider Grid.Row="1" Width="25" Margin="0,0,0,1" IsSnapToTickEnabled="True"
                                                        Maximum="{Binding FeedRatesLast, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}"
                                                        Minimum="{Binding FeedRatesFirst, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}"
                                                        Orientation="Vertical" TickPlacement="BottomRight"
                                                        Ticks="{Binding FeedRates, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}"
                                                        ToolTip="{Binding SelectedFeedRate}"
                                                        Value="{Binding SelectedFeedRate, Converter={StaticResource NonLinearDouble}, ConverterParameter={x:Reference SliderLinearityLabel}}" />
                                            </Grid>
                                        </Grid>
                                        <Button Grid.Row="0" Grid.Column="1" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 X-{0} Y+{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="X-Y+">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="#7D7D00" Kind="ArrowUpLeftBoldOutline" />
                                        </Button>
                                        <Button Grid.Row="1" Grid.Column="1" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 X-{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="X-">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="Red" Kind="ArrowLeftBoldOutline" />
                                        </Button>
                                        <Button Grid.Row="2" Grid.Column="1" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 X-{0} Y-{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="X-Y-">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="#7D7D00" Kind="ArrowDownLeftBoldOutline" />
                                        </Button>
                                        <Button Grid.Row="0" Grid.Column="2" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 Y+{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="Y+">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="Green" Kind="ArrowUpBoldOutline" />
                                        </Button>
                                        <Button Grid.Row="1" Grid.Column="2" cal:Message.Attach="SystemCommand('$H')" ToolTip="Home">
                                            <Button.Style>
                                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Alarm">
                                                            <Setter Property="Background" Value="OrangeRed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <materialDesign:PackIcon Width="45" Height="45" Kind="HomeCircleOutline" />
                                        </Button>
                                        <Button Grid.Row="2" Grid.Column="2" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 Y-{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="Y-">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="Green" Kind="ArrowDownBoldOutline" />
                                        </Button>
                                        <Button Grid.Row="0" Grid.Column="3" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 X+{0} Y+{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="X+Y+">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="#7D7D00" Kind="ArrowUpRightBoldOutline" />
                                        </Button>
                                        <Button Grid.Row="1" Grid.Column="3" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 X+{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="X+">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="Red" Kind="ArrowRightBoldOutline" />
                                        </Button>
                                        <Button Grid.Row="2" Grid.Column="3" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 X+{0} Y-{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="X+Y-">
                                            <materialDesign:PackIcon Width="45" Height="45" Foreground="#7D7D00" Kind="ArrowDownRightBoldOutline" />
                                        </Button>
                                        <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Button Grid.Row="0" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 Z+{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="Z+">
                                                <materialDesign:PackIcon Width="45" Height="45" Foreground="Blue" Kind="ArrowUpBoldOutline" />
                                            </Button>
                                            <Button Grid.Row="1" cal:Message.Attach="[Event PreviewMouseDown] = [Action JoggingCommand('G91 G21 Z-{0} F{1}')]; [Event PreviewMouseUp] = [Action CancelJogging()]" ToolTip="Z-">
                                                <materialDesign:PackIcon Width="45" Height="45" Foreground="Blue" Kind="ArrowDownBoldOutline" />
                                            </Button>
                                        </Grid>

                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <Grid.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="FontSize" Value="16" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Margin" Value="1" />
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition Height="60" />
                                        </Grid.RowDefinitions>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" cal:Message.Attach="GCommand('G28')">Go to G28</Button>
                                            <Button Grid.Column="1" cal:Message.Attach="GCommand('G30')">Go to G30</Button>
                                        </Grid>

                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" cal:Message.Attach="SystemCommand('$X')" ToolTip="Unlock">
                                                <Button.Style>
                                                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Alarm">
                                                                <Setter Property="Background" Value="OrangeRed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <materialDesign:PackIcon Width="45" Height="45" Kind="LockOpenVariant" />
                                            </Button>
                                            <Button x:Name="ResetGrbl" Grid.Column="1" ToolTip="Reset">
                                                <materialDesign:PackIcon Width="45" Height="45" Kind="Restart" />
                                            </Button>
                                            <Button Grid.Column="2" cal:Message.Attach="RealtimeCommandNA('!')" ToolTip="Hold">
                                                <materialDesign:PackIcon Width="45" Height="45" Kind="Pause" />
                                            </Button>
                                            <Button Grid.Column="3" cal:Message.Attach="RealtimeCommandNA('~')" ToolTip="Start">
                                                <Button.Style>
                                                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Hold">
                                                                <Setter Property="Background" Value="Orange" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <materialDesign:PackIcon Width="45" Height="45" Kind="Play" />
                                            </Button>
                                            <Button Grid.Column="4" cal:Message.Attach="SystemCommandNA('$C')" ToolTip="Check">
                                                <Button.Style>
                                                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GrblStatus.MachineState}" Value="Check">
                                                                <Setter Property="Background" Value="Orange" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <materialDesign:PackIcon Width="45" Height="45" Kind="CheckBold" />
                                            </Button>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </TabItem>
                            <TabItem Width="100" Header="Offsets">
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="Padding" Value="0,-1,0,0" />
                                            <Setter Property="Margin" Value="1" />
                                        </Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Padding" Value="0" />
                                            <Setter Property="Margin" Value="1" />
                                        </Style>
                                        <Style x:Key="ColHeader" TargetType="Label">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="Padding" Value="0" />
                                            <Setter Property="Margin" Value="1" />
                                        </Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="TextAlignment" Value="Right" />
                                            <Setter Property="Margin" Value="1" />
                                            <Setter Property="Padding" Value="0,-1,0,0" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                        <DataTemplate x:Key="OffsetsData" DataType="model:Position">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <TextBox Grid.Column="0" cal:Message.Attach="[Event LostFocus] = [Action SetOffset('X', $source, $this)];[Key Enter] = [Action SetOffset('X', $source, $this)]"
                                                         Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Path=Background}"
                                                         Tag="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Path=Tag}"
                                                         Text="{Binding X}" />
                                                <TextBox Grid.Column="1" cal:Message.Attach="[Event LostFocus] = [Action SetOffset('Y', $source, $this)];[Key Enter] = [Action SetOffset('Y', $source, $this)]"
                                                         Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Path=Background}"
                                                         Tag="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Path=Tag}"
                                                         Text="{Binding Y}" />
                                                <TextBox Grid.Column="2" cal:Message.Attach="[Event LostFocus] = [Action SetOffset('Z', $source, $this)];[Key Enter] = [Action SetOffset('Z', $source, $this)]"
                                                         Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Path=Background}"
                                                         Tag="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Path=Tag}"
                                                         Text="{Binding Z}" />
                                            </Grid>
                                        </DataTemplate>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>

                                    <Label Grid.Row="1" Grid.Column="1" Content="X"
                                           Style="{StaticResource ColHeader}" />
                                    <Label Grid.Row="1" Grid.Column="2" Content="Y"
                                           Style="{StaticResource ColHeader}" />
                                    <Label Grid.Row="1" Grid.Column="3" Content="Z"
                                           Style="{StaticResource ColHeader}" />
                                    <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="Tool length offset:" />
                                    <TextBox Grid.Row="0" Grid.Column="3" cal:Message.Attach="[Event LostFocus] = [Action SetToolLengthOffset($this)];[Key Enter] = [Action SetToolLengthOffset($this)]"
                                             Text="{Binding GrblStatus.ToolLengthOffset}" />
                                    <Button Grid.Row="0" Grid.Column="4" cal:Message.Attach="GCommand('G43.1 Z0')" ToolTip="Set zero">
                                        0
                                    </Button>

                                    <Button Grid.Row="2" Grid.Column="0" cal:Message.Attach="GCommand('G10 L2 P1 X{3} Y{4} Z{5}')" ToolTip="Set current machine position">
                                        G54
                                    </Button>
                                    <ContentControl Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G54Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    Tag="G10 L2 P1">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GrblStatus.CoordinateSystem}" Value="G54">
                                                        <Setter Property="Background" Value="LightSkyBlue" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Button Grid.Row="2" Grid.Column="4" cal:Message.Attach="GCommand('G10 L2 P1 X0 Y0 Z0')" ToolTip="Set zero position">
                                        0
                                    </Button>

                                    <Button Grid.Row="3" Grid.Column="0" cal:Message.Attach="GCommand('G10 L2 P2 X{3} Y{4} Z{5}')" ToolTip="Set current machine position">
                                        G55
                                    </Button>
                                    <ContentControl Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G55Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    Tag="G10 L2 P2">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GrblStatus.CoordinateSystem}" Value="G55">
                                                        <Setter Property="Background" Value="LightSkyBlue" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Button Grid.Row="3" Grid.Column="4" cal:Message.Attach="GCommand('G10 L2 P2 X0 Y0 Z0')" ToolTip="Set zero position">
                                        0
                                    </Button>

                                    <Button Grid.Row="4" Grid.Column="0" cal:Message.Attach="GCommand('G10 L2 P3 X{3} Y{4} Z{5}')" ToolTip="Set current machine position">
                                        G56
                                    </Button>
                                    <ContentControl Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G56Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    Tag="G10 L2 P3">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GrblStatus.CoordinateSystem}" Value="G56">
                                                        <Setter Property="Background" Value="LightSkyBlue" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Button Grid.Row="4" Grid.Column="4" cal:Message.Attach="GCommand('G10 L2 P3 X0 Y0 Z0')" ToolTip="Set zero position">
                                        0
                                    </Button>

                                    <Button Grid.Row="5" Grid.Column="0" cal:Message.Attach="GCommand('G10 L2 P4 X{3} Y{4} Z{5}')" ToolTip="Set current machine position">
                                        G57
                                    </Button>
                                    <ContentControl Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G57Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    Tag="G10 L2 P4">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GrblStatus.CoordinateSystem}" Value="G57">
                                                        <Setter Property="Background" Value="LightSkyBlue" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Button Grid.Row="5" Grid.Column="4" cal:Message.Attach="GCommand('G10 L2 P4 X0 Y0 Z0')" ToolTip="Set zero position">
                                        0
                                    </Button>

                                    <Button Grid.Row="6" Grid.Column="0" cal:Message.Attach="GCommand('G10 L2 P5 X{3} Y{4} Z{5}')" ToolTip="Set current machine position">
                                        G58
                                    </Button>
                                    <ContentControl Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G58Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    Tag="G10 L2 P5">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GrblStatus.CoordinateSystem}" Value="G58">
                                                        <Setter Property="Background" Value="LightSkyBlue" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Button Grid.Row="6" Grid.Column="4" cal:Message.Attach="GCommand('G10 L2 P5 X0 Y0 Z0')" ToolTip="Set zero position">
                                        0
                                    </Button>

                                    <Button Grid.Row="7" Grid.Column="0" cal:Message.Attach="GCommand('G10 L2 P6 X{3} Y{4} Z{5}')" ToolTip="Set current machine position">
                                        G59
                                    </Button>
                                    <ContentControl Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G59Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    Tag="G10 L2 P6">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GrblStatus.CoordinateSystem}" Value="G59">
                                                        <Setter Property="Background" Value="LightSkyBlue" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Button Grid.Row="7" Grid.Column="4" cal:Message.Attach="GCommand('G10 L2 P6 X0 Y0 Z0')" ToolTip="Set zero position">
                                        0
                                    </Button>

                                    <Button Grid.Row="8" Grid.Column="0" cal:Message.Attach="GCommand('G28.1')" ToolTip="Set current machine position">
                                        G28
                                    </Button>
                                    <ContentControl Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G28Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    IsEnabled="False" />
                                    <Button Grid.Row="8" Grid.Column="4" Visibility="Collapsed">
                                        0
                                    </Button>

                                    <Button Grid.Row="9" Grid.Column="0" cal:Message.Attach="GCommand('G30.1')" ToolTip="Set current machine position">
                                        G30
                                    </Button>
                                    <ContentControl Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G30Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    IsEnabled="False" />

                                    <Button Grid.Row="10" Grid.Column="0" cal:Message.Attach="GCommand('G30.1')" ToolTip="Set current machine position">
                                        G92
                                    </Button>
                                    <ContentControl Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.G92Position}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    IsEnabled="False" />

                                    <Button Grid.Row="11" Grid.Column="0" ToolTip="Last probe machine position">
                                        PRB
                                    </Button>
                                    <ContentControl Grid.Row="11" Grid.Column="1" Grid.ColumnSpan="3"
                                                    Content="{Binding GrblStatus.ProbePosition}"
                                                    ContentTemplate="{StaticResource OffsetsData}"
                                                    IsEnabled="False">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GrblStatus.ProbeState}" Value="True">
                                                        <Setter Property="Background" Value="LightGreen" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding GrblStatus.ProbeState}" Value="False">
                                                        <Setter Property="Background" Value="OrangeRed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <Button Grid.Row="10" Grid.Column="4" Visibility="Collapsed">
                                        0
                                    </Button>
                                </Grid>
                            </TabItem>

                        </TabControl>



                    </Grid>
                    <TabControl Grid.Column="1">
                        <TabItem Width="120" Header="File">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="20" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="FontSize" Value="16" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="Margin" Value="1" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Button x:Name="FileOpen" ToolTip="Open file">
                                        <materialDesign:PackIcon Width="45" Height="45" Kind="File" />
                                    </Button>
                                    <Button x:Name="StartFileExecution" ToolTip="Run code">
                                        <materialDesign:PackIcon Width="45" Height="45" Kind="PLay" />
                                    </Button>
                                    <Button x:Name="StartStepFileExecution" ToolTip="Single step">
                                        <materialDesign:PackIcon Width="45" Height="45" Kind="StepForward" />
                                    </Button>
                                    <Button x:Name="PauseFileExecution" ToolTip="Pause">
                                        <materialDesign:PackIcon Width="45" Height="45" Kind="Pause" />
                                    </Button>
                                    <Button x:Name="StopFileExecution" ToolTip="Stop">
                                        <materialDesign:PackIcon Width="45" Height="45" Kind="Stop" />
                                    </Button>
                                    <Button x:Name="ReloadFile" ToolTip="Reload file">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Unchanged">
                                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Deleted">
                                                        <Setter Property="Background" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Updated">
                                                        <Setter Property="Background" Value="Orange" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <materialDesign:PackIcon Width="45" Height="45" Kind="Reload" />
                                    </Button>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="materialDesign:PackIcon">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Unchanged">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Deleted">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Updated">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Resources>
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Unchanged">
                                                    <Setter Property="Background" Value="Transparent" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Deleted">
                                                    <Setter Property="Background" Value="Red" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding GCodeFile.FileState}" Value="Updated">
                                                    <Setter Property="Background" Value="Orange" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <materialDesign:PackIcon Width="20" Height="20" Kind="FileWarning" />
                                    <Label Padding="2" VerticalContentAlignment="Center"
                                           Content="{Binding GCodeFile.FilePath}"
                                           ToolTip="{Binding GCodeFile.FilePath}" />
                                </StackPanel>
                                <ProgressBar Grid.Row="2" Margin="1" Background="White"
                                             Maximum="{Binding FileLinesCount, Mode=OneWay}"
                                             Minimum="0"
                                             Value="{Binding FileLinesProcessed, Mode=OneWay}">
                                    <ProgressBar.ToolTip>
                                        <TextBlock>
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="Processed : {0}/{1}">
                                                    <Binding Mode="OneWay" Path="FileLinesProcessed" />
                                                    <Binding Mode="OneWay" Path="FileLinesCount" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </ProgressBar.ToolTip>

                                </ProgressBar>
                                <TextBlock Grid.Row="2" Margin="1" TextAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Processed : {0}/{1}">
                                            <Binding Mode="OneWay" Path="FileLinesProcessed" />
                                            <Binding Mode="OneWay" Path="FileLinesCount" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <Label Padding="2" VerticalContentAlignment="Center"
                                           Content="{Binding GrblStatus.LastMessage}"
                                           ToolTip="{Binding GrblStatus.LastMessage}" />
                                    <Label Grid.Column="1" Padding="0" VerticalContentAlignment="Center"
                                           Content="{Binding Elapsed}"
                                           ContentStringFormat="{}{0:hh}:{0:mm}:{0:ss}" ToolTip="Time elapsed" />
                                </Grid>
                                <TabControl Grid.Row="4" Grid.Column="0">
                                    <TabItem Width="100" Header="File progress">
                                        <ListView ItemsSource="{Binding FileCommandsCollection}" VirtualizingStackPanel.VirtualizationMode="Recycling">
                                            <ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ListView.ItemsPanel>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid ToolTip="{Binding Result}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0" Text="{Binding Path=ResultType}" />
                                                        <TextBlock Grid.Column="1" Padding="1,0,5,0"
                                                                   Text="{Binding Path=Data}" />
                                                        <TextBlock Grid.Column="2" Text="{Binding Path=Result}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </TabItem>
                                    <TabItem Width="100" Header="File data">
                                        <avalonEdit:TextEditor Document="{Binding GCodeFile.FileData}"
                                                               HorizontalScrollBarVisibility="Auto" LineNumbersForeground="Black" ShowLineNumbers="True"
                                                               SyntaxHighlighting="{Binding GCodeHighlighting, Mode=OneTime}"
                                                               VerticalScrollBarVisibility="Auto" />
                                    </TabItem>
                                </TabControl>
                            </Grid>
                        </TabItem>
                        <TabItem Width="120">
                            <TabItem.HeaderTemplate>
                                <ItemContainerTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="43*" />
                                            <ColumnDefinition Width="30" />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Margin="25,0,0,0" Content="Macros" />
                                        <Button Grid.Column="1" Width="20" Height="20" Padding="0" cal:Message.Attach="AddMacro" Background="Transparent" BorderThickness="0" ToolTip="Add Macros"
                                                Visibility="{Binding (TabItem.IsSelected), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}, Converter={StaticResource BoolToVis}}">
                                            <materialDesign:PackIcon Width="20" Height="20" Foreground="Green" Kind="PlusCircleOutline" />
                                        </Button>
                                    </Grid>
                                </ItemContainerTemplate>
                            </TabItem.HeaderTemplate>
                            <TabItem.Resources>
                                <DataTemplate x:Key="MacrosTemplate" DataType="model:Macros">
                                    <StackPanel x:Name="MacrosPanel" Margin="5">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Background" Value="White" />
                                            </Style>
                                        </StackPanel.Style>
                                        <Button cal:Message.Attach="RunMacro($dataContext)"
                                                Content="{Binding Path=Name}"
                                                FontSize="20px" FontWeight="DemiBold"
                                                ToolTip="{Binding Path=Name}">
                                            <Button.Background>
                                                <SolidColorBrush Color="{Binding Color}" />
                                            </Button.Background>
                                            <Button.Resources>
                                                <Style TargetType="Border">
                                                    <Setter Property="CornerRadius" Value="5" />
                                                    <Setter Property="Margin" Value="0,0,0,2" />
                                                </Style>
                                            </Button.Resources>
                                        </Button>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=MacrosPanel}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <Button Margin="2" cal:Message.Attach="UpMacro($dataContext)" ToolTip="Edit">
                                                <materialDesign:PackIcon Width="20" Height="20" Foreground="Black" Kind="ArrowBack" />
                                            </Button>
                                            <Button Margin="2" cal:Message.Attach="EditMacro($dataContext)" ToolTip="Edit">
                                                <materialDesign:PackIcon Width="20" Height="20" Foreground="Black" Kind="FileDocumentEditOutline" />
                                            </Button>
                                            <Button Margin="2" cal:Message.Attach="DeleteMacro($dataContext)" ToolTip="Delete">
                                                <materialDesign:PackIcon Width="20" Height="20" Foreground="Red" Kind="TrashCanOutline" />
                                            </Button>
                                            <Button Margin="2" cal:Message.Attach="DownMacro($dataContext)" ToolTip="Edit">
                                                <materialDesign:PackIcon Width="20" Height="20" Foreground="Black" Kind="ArrowForward" />
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </TabItem.Resources>
                            <DockPanel>
                                <ScrollViewer x:Name="MyScrollViewer" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                    <ScrollViewer.Resources>
                                        <Style TargetType="ScrollViewer">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMacrosSelected}" Value="True">
                                                    <Setter Property="Height" Value="200" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ScrollViewer.Resources>
                                    <ItemsControl ItemTemplate="{StaticResource MacrosTemplate}" ItemsSource="{Binding Macroses}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </ScrollViewer>
                                <Grid DockPanel.Dock="Bottom" Visibility="{Binding IsMacrosSelected, Converter={StaticResource BoolToVis}, FallbackValue=Visible}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Label Grid.ColumnSpan="3">Name:</Label>
                                    <TextBox Grid.Row="1" Grid.Column="0"
                                             Text="{Binding MacrosSelected.Name}" />
                                    <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
                                        Macros color:
                                    </Label>
                                    <xctk:ColorPicker Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                                                      SelectedColor="{Binding MacrosSelected.Color}" />
                                    <Label Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3">
                                        Macros body:
                                    </Label>
                                    <avalonEdit:TextEditor Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" HorizontalScrollBarVisibility="Auto" LineNumbersForeground="Black" ShowLineNumbers="True"
                                                           SyntaxHighlighting="{Binding GCodeHighlighting, Mode=OneTime}"
                                                           VerticalScrollBarVisibility="Auto">
                                        <i:Interaction.Behaviors>
                                            <extensions:AvalonEditBehaviour BindingText="{Binding MacrosSelected.Command}" />
                                        </i:Interaction.Behaviors>
                                    </avalonEdit:TextEditor>

                                    <Button Grid.Row="1" Grid.Column="1" Margin="2" cal:Message.Attach="SaveMacro($dataContext)"
                                            DataContext="{Binding MacrosSelected}"
                                            ToolTip="Save">
                                        <materialDesign:PackIcon Width="20" Height="20" Foreground="Green" Kind="ContentSaveOutline" />
                                    </Button>
                                    <Button Grid.Row="1" Grid.Column="2" Margin="2" cal:Message.Attach="CancelMacro" ToolTip="Cancel">
                                        <materialDesign:PackIcon Width="20" Height="20" Foreground="Red" Kind="CloseCircleOutline" />
                                    </Button>
                                </Grid>

                            </DockPanel>
                        </TabItem>
                    </TabControl>
                    <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                        <StackPanel Orientation="Vertical">
                            <StackPanel.Resources>
                                <Style TargetType="Label">
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="FontSize" Value="14" />
                                </Style>
                                <Style x:Key="LabelBold"
                                       BasedOn="{StaticResource {x:Type Label}}"
                                       TargetType="Label">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Style>
                                <DataTemplate x:Key="ExpanderHeader">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="105" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" HorizontalAlignment="Right"
                                               Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}, Path=Tag}" />
                                        <Label Grid.Column="1" Content=":" />
                                        <Label Grid.Column="2"
                                               Content="{Binding}"
                                               Style="{StaticResource LabelBold}" />
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate x:Key="ExpanderContent">
                                    <Button Height="30" Margin="0,2" cal:Message.Attach="GCommand($dataContext)"
                                            Content="{Binding}"
                                            DataContext="{Binding}" />
                                </DataTemplate>
                                <Style BasedOn="{StaticResource {x:Type Expander}}" TargetType="Expander">
                                    <Setter Property="HeaderTemplate" Value="{StaticResource ExpanderHeader}" />
                                </Style>
                                <Style BasedOn="{StaticResource {x:Type ItemsControl}}" TargetType="ItemsControl">
                                    <Setter Property="ItemTemplate" Value="{StaticResource ExpanderContent}" />
                                </Style>
                            </StackPanel.Resources>
                            <Expander Header="{Binding GrblStatus.CoordinateSystem}" Tag="Work offset">
                                <StackPanel>
                                    <ItemsControl ItemsSource="{converters:EnumToItemsSource {x:Type enum:CoordinateSystem}}" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="{Binding GrblStatus.DistanceMode}" Tag="Distance mode">
                                <StackPanel>
                                    <ItemsControl ItemsSource="{converters:EnumToItemsSource {x:Type enum:DistanceMode}}" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="{Binding GrblStatus.FeedRateMode}" Tag="FeedRate mode">
                                <StackPanel>
                                    <TextBlock Text="{Binding GrblStatus.FeedAndSpeed.FeedRate, StringFormat='Feed: {0}'}" TextAlignment="Center" />
                                    <ItemsControl ItemsSource="{converters:EnumToItemsSource {x:Type enum:FeedRateMode}}" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="{Binding GrblStatus.UnitsMode}" Tag="Units">
                                <StackPanel>
                                    <ItemsControl ItemsSource="{converters:EnumToItemsSource {x:Type enum:UnitsMode}}" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="{Binding GrblStatus.SpindleState}" Tag="Spindle state">
                                <StackPanel>
                                    <TextBlock Text="{Binding GrblStatus.FeedAndSpeed.SpindleSpeed, StringFormat='Spindle speed: {0}'}" TextAlignment="Center" />
                                    <ItemsControl ItemsSource="{converters:EnumToItemsSource {x:Type enum:SpindleState}}" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="{Binding GrblStatus.CoolantState}" Tag="Coolant state">
                                <StackPanel>
                                    <ItemsControl ItemsSource="{converters:EnumToItemsSource {x:Type enum:CoolantState}}" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="{Binding GrblStatus.ActivePlane}" Tag="Arc plane">
                                <StackPanel>
                                    <ItemsControl ItemsSource="{converters:EnumToItemsSource {x:Type enum:ActivePlane}}" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="" Tag="Message log"
                                      ToolTip="{Binding GrblStatus.LastMessage}">
                                <ListView Width="265" HorizontalContentAlignment="Stretch"
                                          ItemsSource="{Binding GrblStatus.Messages.AsObservable}"
                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}"
                                                       TextWrapping="Wrap"
                                                       ToolTip="{Binding}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Expander>
                            <Expander Header="" Tag="Pin states">
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="materialDesign:PackIcon">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding}" Value="false">
                                                    <Setter Property="Foreground" Value="Black" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding}" Value="true">
                                                    <Setter Property="Foreground" Value="Green" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Resources>
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.XLimitPin}"
                                                             Kind="AlphaXBox" ToolTip="X limit pin" />
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.YLimitPin}"
                                                             Kind="AlphaYBox" ToolTip="Y limit pin" />
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.ZLimitPin}"
                                                             Kind="AlphaZBox" ToolTip="Z limit pin" />
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.ProbePin}"
                                                             Kind="AlphaPBox" ToolTip="Probe pin" />
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.DoorPin}"
                                                             Kind="AlphaDBox" ToolTip="Door pin" />
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.HoldPin}"
                                                             Kind="AlphaHBox" ToolTip="Hold pin" />
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.SoftResetPin}"
                                                             Kind="AlphaRBox" ToolTip="Soft reset pin" />
                                    <materialDesign:PackIcon Width="33" Height="33"
                                                             DataContext="{Binding GrblStatus.InputPinState.CycleStartPin}"
                                                             Kind="AlphaSBox" ToolTip="Cycle start pin" />
                                </StackPanel>
                            </Expander>
                            <Expander Header="" Tag="Overrides">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <GroupBox Header="Accessory" IsEnabled="{Binding CanAccessoryState}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" cal:Message.Attach="RealtimeIntCommand(158)" Content="Spindle stop">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GrblStatus.AccessoryState.Spindle}" Value="M5">
                                                                <Setter Property="Background" Value="OrangeRed" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button Grid.Column="1" cal:Message.Attach="RealtimeIntCommand(160)" Content="Flood">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GrblStatus.AccessoryState.Flood}" Value="True">
                                                                <Setter Property="Background" Value="OrangeRed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button Grid.Column="2" cal:Message.Attach="RealtimeIntCommand(161)" Content="Mist">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding GrblStatus.AccessoryState.Mist}" Value="True">
                                                                <Setter Property="Background" Value="OrangeRed" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </GroupBox>

                                    <GroupBox Grid.Row="1">
                                        <GroupBox.Header>
                                            <TextBlock Text="{Binding GrblStatus.OverrideValues.Feed, StringFormat='Feed {0}%', FallbackValue='Feed 0%'}" />
                                        </GroupBox.Header>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Row="1" Grid.Column="0" cal:Message.Attach="RealtimeIntCommand(148)">
                                                -1
                                            </Button>
                                            <Button Grid.Row="0" Grid.Column="0" cal:Message.Attach="RealtimeIntCommand(147)">
                                                +1
                                            </Button>
                                            <Button Grid.Row="1" Grid.Column="1" cal:Message.Attach="RealtimeIntCommand(146)">
                                                -10
                                            </Button>
                                            <Button Grid.Row="0" Grid.Column="1" cal:Message.Attach="RealtimeIntCommand(145)">
                                                +10
                                            </Button>
                                            <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" cal:Message.Attach="RealtimeIntCommand(144)" ToolTip="Reset">
                                                <materialDesign:PackIcon Width="36" Height="36" Kind="Restart" />
                                            </Button>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="2">
                                        <GroupBox.Header>
                                            <TextBlock Text="{Binding GrblStatus.OverrideValues.Rapid, StringFormat='Rapid {0}%', FallbackValue='Rapid 0%'}" />
                                        </GroupBox.Header>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Row="0" Grid.Column="0" cal:Message.Attach="RealtimeIntCommand(151)">
                                                25%
                                            </Button>
                                            <Button Grid.Row="0" Grid.Column="1" cal:Message.Attach="RealtimeIntCommand(150)">
                                                50%
                                            </Button>
                                            <Button Grid.Row="0" Grid.Column="2" cal:Message.Attach="RealtimeIntCommand(149)">
                                                100%
                                            </Button>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="3">
                                        <GroupBox.Header>
                                            <TextBlock Text="{Binding GrblStatus.OverrideValues.Spindle, StringFormat='Spindle {0}%', FallbackValue='Spindle 0%'}" />
                                        </GroupBox.Header>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Row="1" Grid.Column="0" cal:Message.Attach="RealtimeIntCommand(157)">
                                                -1
                                            </Button>
                                            <Button Grid.Row="0" Grid.Column="0" cal:Message.Attach="RealtimeIntCommand(156)">
                                                +1
                                            </Button>
                                            <Button Grid.Row="1" Grid.Column="1" cal:Message.Attach="RealtimeIntCommand(155)">
                                                -10
                                            </Button>
                                            <Button Grid.Row="0" Grid.Column="1" cal:Message.Attach="RealtimeIntCommand(154)">
                                                +10
                                            </Button>
                                            <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" cal:Message.Attach="RealtimeIntCommand(153)" ToolTip="Reset">
                                                <materialDesign:PackIcon Width="36" Height="36" Kind="Restart" />
                                            </Button>
                                        </Grid>
                                    </GroupBox>

                                </Grid>
                            </Expander>
                        </StackPanel>
                    </ScrollViewer>

                </Grid>
            </TabItem>
            <TabItem Width="100" Header="Configuration">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="400" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Grbl Settings">
                        <Grid Background="#FFE5E5E5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" cal:Message.Attach="SystemCommand('$$')" ToolTip="Reload">
                                    <materialDesign:PackIcon Width="40" Height="30" Foreground="Red" Kind="Reload" />
                                </Button>
                                <Button Grid.Column="2" cal:Message.Attach="SaveSettings" ToolTip="Save">
                                    <materialDesign:PackIcon Width="40" Height="30" Foreground="Green" Kind="ContentSaveOutline" />
                                </Button>
                            </Grid>
                            <ScrollViewer Grid.Row="1" Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                <ItemsControl ItemTemplate="{DynamicResource DynamicTemplate}" ItemsSource="{Binding GrblStatus.Settings.SettingsList}">
                                    <ItemsControl.Resources>
                                        <DataTemplate x:Key="IntegerTemplate" DataType="model:GrblSetting">
                                            <xctk:IntegerUpDown Margin="2" Value="{Binding Value}" />
                                        </DataTemplate>

                                        <DataTemplate x:Key="DecimalTemplate" DataType="model:GrblSetting">
                                            <xctk:DecimalUpDown Margin="2" Value="{Binding Value}" />
                                        </DataTemplate>

                                        <DataTemplate x:Key="BooleanTemplate" DataType="model:GrblSetting">
                                            <toggleSwitch:HorizontalToggleSwitch Width="80" IsChecked="{Binding Value, Converter={StaticResource StrIntToBool}, Mode=TwoWay}">
                                                <toggleSwitch:HorizontalToggleSwitch.ThumbTemplate>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <Grid Background="Transparent">
                                                            <borders:OuterGlowBorder Background="Transparent" BorderThickness="0" CornerRadius="4" IsTabStop="False" OuterGlowColor="Black" OuterGlowOpacity="0.15" OuterGlowSize="4" ShadowCornerRadius="8">
                                                                <Grid>
                                                                    <borders:ClippingBorder x:Name="Background" Background="White"
                                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            CornerRadius="4" IsTabStop="False">
                                                                        <Border Padding="6"
                                                                                Background="{TemplateBinding Background}"
                                                                                BorderBrush="#FFEBEBEB"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="3">
                                                                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                                                                <Rectangle Width="1" Fill="#7F969696" StrokeThickness="0" />
                                                                                <Rectangle Width="1" Margin="0,0,1,0" Fill="#7FF8F8F8" StrokeThickness="0" />
                                                                                <Rectangle Width="1" Fill="#7F969696" StrokeThickness="0" />
                                                                                <Rectangle Width="1" Margin="0,0,1,0" Fill="#7FF8F8F8" StrokeThickness="0" />
                                                                                <Rectangle Width="1" Fill="#7F969696" StrokeThickness="0" />
                                                                                <Rectangle Width="1" Fill="#7FF8F8F8" StrokeThickness="0" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                    </borders:ClippingBorder>
                                                                    <borders:ClippingBorder x:Name="BackgroundAnimation" Background="Black" BorderBrush="Black"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            CornerRadius="4" IsTabStop="False" Opacity="0" />
                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusX="4" RadiusY="4" />
                                                                    <Rectangle x:Name="FocusVisualElement" Margin="1" IsHitTestVisible="false" Opacity="0" RadiusX="4" RadiusY="4" StrokeThickness="1" />
                                                                </Grid>
                                                            </borders:OuterGlowBorder>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal" />
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="0.05" Duration="0" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="0.25" Duration="0" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55" Duration="0" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0.05" Duration="0" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused" />
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Unchecked" />
                                                                    <VisualState x:Name="Checked" />
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </toggleSwitch:HorizontalToggleSwitch.ThumbTemplate>
                                                <toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                                                    <TextBlock>No</TextBlock>
                                                </toggleSwitch:HorizontalToggleSwitch.UncheckedContent>
                                                <toggleSwitch:HorizontalToggleSwitch.CheckedContent>
                                                    <TextBlock>Yes</TextBlock>
                                                </toggleSwitch:HorizontalToggleSwitch.CheckedContent>
                                            </toggleSwitch:HorizontalToggleSwitch>
                                        </DataTemplate>

                                        <DataTemplate x:Key="Mask8Template" DataType="model:GrblSetting">
                                            <ComboBox Margin="2"
                                                      ItemsSource="{Binding DataContext.Mask8Items, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                                      SelectedValue="{Binding Value}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Width="20" Text="{Binding}" />
                                                            <TextBlock Width="40" Text="{Binding Converter={StaticResource IntegerToBinaryString}}" />
                                                            <TextBlock>X:</TextBlock>
                                                            <TextBlock Width="30" Text="{Binding Converter={StaticResource IntegerMaskToAxisState}, ConverterParameter=0}" />
                                                            <TextBlock>Y:</TextBlock>
                                                            <TextBlock Width="30" Text="{Binding Converter={StaticResource IntegerMaskToAxisState}, ConverterParameter=1}" />
                                                            <TextBlock>Z:</TextBlock>
                                                            <TextBlock Width="30" Text="{Binding Converter={StaticResource IntegerMaskToAxisState}, ConverterParameter=2}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </DataTemplate>
                                        <DataTemplate x:Key="Mask3Template" DataType="model:GrblSetting">
                                            <ComboBox Margin="2"
                                                      ItemsSource="{Binding DataContext.Mask3Items, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                                      SelectedValue="{Binding Value}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Width="50" Text="{Binding}" />
                                                            <TextBlock Text="{Binding Converter={StaticResource IntegerMask3ToDescription}}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </DataTemplate>

                                        <DataTemplate x:Key="DynamicTemplate" DataType="model:GrblSetting">
                                            <Grid Margin="0,2,0,2" ToolTip="{Binding Description}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30" />
                                                    <ColumnDefinition Width="80" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Label Content="{Binding Index}" />
                                                <ContentPresenter Grid.Column="1"
                                                                  Content="{Binding}"
                                                                  Tag="{Binding Path=Type, FallbackValue={x:Static enum:GrblSettingType.Integer}}">
                                                    <ContentPresenter.Resources>
                                                        <Style TargetType="{x:Type ContentPresenter}">
                                                            <Style.Triggers>
                                                                <Trigger Property="Tag" Value="{x:Static enum:GrblSettingType.Integer}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource IntegerTemplate}" />
                                                                </Trigger>
                                                                <Trigger Property="Tag" Value="{x:Static enum:GrblSettingType.Decimal}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource DecimalTemplate}" />
                                                                </Trigger>
                                                                <Trigger Property="Tag" Value="{x:Static enum:GrblSettingType.Boolean}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource BooleanTemplate}" />
                                                                </Trigger>
                                                                <Trigger Property="Tag" Value="{x:Static enum:GrblSettingType.Mask8}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource Mask8Template}" />
                                                                </Trigger>
                                                                <Trigger Property="Tag" Value="{x:Static enum:GrblSettingType.Mask3}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource Mask3Template}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentPresenter.Resources>
                                                </ContentPresenter>
                                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                    <StackPanel.Style>
                                                        <Style TargetType="StackPanel">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsModified}" Value="true">
                                                                    <Setter Property="Background" Value="Gold" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </StackPanel.Style>
                                                    <materialDesign:PackIcon Width="26" Height="26" Foreground="Black" Kind="AlertDecagram" ToolTip="Modified">
                                                        <materialDesign:PackIcon.Style>
                                                            <Style TargetType="materialDesign:PackIcon">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsModified}" Value="false">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </materialDesign:PackIcon.Style>
                                                    </materialDesign:PackIcon>
                                                    <Label Content="{Binding Description}" />
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.Resources>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Header="Application Settings">
                        <WrapPanel Orientation="Horizontal">
                            <WrapPanel.Resources>
                                <Style TargetType="xctk:DoubleUpDown">
                                    <Setter Property="Margin" Value="2" />
                                </Style>
                            </WrapPanel.Resources>
                            <GroupBox Width="120" Margin="2" Header="Jogging distances">
                                <TextBox Height="150" AcceptsReturn="True" MaxLines="10"
                                         Text="{Binding JoggingDistances, Converter={StaticResource ListDoubleToString}, UpdateSourceTrigger=LostFocus}"
                                         TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" />
                            </GroupBox>
                            <GroupBox Width="120" Margin="2" Header="Jogging speeds">
                                <TextBox AcceptsReturn="True" MaxLines="10"
                                         Text="{Binding FeedRates, Converter={StaticResource ListDoubleToString}, UpdateSourceTrigger=LostFocus}"
                                         TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" />
                            </GroupBox>
                            <GroupBox Width="200" Margin="2" Padding="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                    </Grid.RowDefinitions>
                                    <Label Content="Linearity power:" />
                                    <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Minimum="1"
                                                        Value="{Binding SliderLinearity}" />
                                </Grid>
                            </GroupBox>
                        </WrapPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Width="100" Header="Communication">
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="26" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="26" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="26" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="26" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="System commands log" />
                    <Button Grid.Row="0" Grid.Column="1" cal:Message.Attach="RefreshSystemLog()" ToolTip="Refresh">
                        <materialDesign:PackIcon Width="20" Height="20" Foreground="Red" Kind="Refresh" />
                    </Button>
                    <Label Grid.Row="0" Grid.Column="2" Content="Manual commands log" />
                    <Button Grid.Row="0" Grid.Column="3" cal:Message.Attach="RefreshManualLog()" ToolTip="Refresh">
                        <materialDesign:PackIcon Width="20" Height="20" Foreground="Red" Kind="Refresh" />
                    </Button>
                    <Label Grid.Row="0" Grid.Column="4" Content="Macro commands log" />
                    <Button Grid.Row="0" Grid.Column="5" cal:Message.Attach="RefreshMacroLog()" ToolTip="Refresh">
                        <materialDesign:PackIcon Width="20" Height="20" Foreground="Red" Kind="Refresh" />
                    </Button>
                    <Label Grid.Row="0" Grid.Column="6" Content="Full communication log" />
                    <Button Grid.Row="0" Grid.Column="7" cal:Message.Attach="RefreshFullLog()" ToolTip="Refresh">
                        <materialDesign:PackIcon Width="20" Height="20" Foreground="Red" Kind="Refresh" />
                    </Button>
                    <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                              ItemsSource="{Binding SystemCommandsCollection}"
                              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid ToolTip="{Binding Result}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Path=ResultType}" />
                                    <TextBlock Grid.Column="1" Padding="1,0,5,0"
                                               Text="{Binding Path=Data}" />
                                    <TextBlock Grid.Column="2" Text="{Binding Path=Result}" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2"
                              ItemsSource="{Binding ManualCommandsCollection}"
                              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid ToolTip="{Binding Result}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Path=ResultType}" />
                                    <TextBlock Grid.Column="1" Padding="1,0,5,0"
                                               Text="{Binding Path=Data}" />
                                    <TextBlock Grid.Column="2" Text="{Binding Path=Result}" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView Grid.Row="1" Grid.Column="4" Grid.ColumnSpan="2"
                              ItemsSource="{Binding MacroCommandsCollection}"
                              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid ToolTip="{Binding Result}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Path=ResultType}" />
                                    <TextBlock Grid.Column="1" Padding="1,0,5,0"
                                               Text="{Binding Path=Data}" />
                                    <TextBlock Grid.Column="2" Text="{Binding Path=Result}" />
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView Grid.Row="1" Grid.Column="6" Grid.ColumnSpan="2"
                              ItemsSource="{Binding CommunicationLog}"
                              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" ToolTip="{Binding}" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>